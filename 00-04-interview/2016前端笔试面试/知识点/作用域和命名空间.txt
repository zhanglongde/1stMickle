1作用域
js支持一对花括号创建的代码段，
但是不支持块级作用域（{}、if(){}等），
仅仅支持函数作用域


2.return不能分行注意点
return对象的做扩和return不在一行上就会出错
// 译者注：下面输出 undefined
function add(a, b) {
    return 
        a + b;
}
console.log(add(1, 2));
注意: 如果不是在赋值语句中，而是在 return 表达式或者函数参数中，
{...} 将会作为代码段解析，
 而不是作为对象的字面语法解析。
如果考虑到 自动分号插入，这可能会导致一些不易察觉的错误。



3.显示命名空间
js中没有显示命名空间定义，所以全有对象都定义在一个全局共享的命名空间下面
每次引用一个变量，js会向上便利整个作用域直到找到这个变量位置



4隐式的全局变量
// 脚本 A
foo = '42';
// 脚本 B
var foo = '42'
上面两段脚本效果不同。脚本 A 在全局作用域内定义了变量 foo，而脚本 B 在当前作用域内定义变量 foo。

不使用var声明变量将会导致隐式的全局变量产生
而使用var定义变量即在当前作用域内定义变量



